library("RNeo4j")
install.packages("rgl")
install.packages("RNeo4j")
edge.target.y=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN a.y")))
nodes.x=as.numeric(unlist(RNeo4j::getNodes(graph,"MATCH (p:Node) RETURN p.x")))
library("RNeo4j")
library("rgl")
graph=RNeo4j::startGraph("192.168.99.100:7474/db/data",username="neo4j",password="neo")
nodes.x=as.numeric(unlist(RNeo4j::getNodes(graph,"MATCH (p:Node) RETURN p.x")))
nodes.y=as.numeric(unlist(RNeo4j::getNodes(graph,"MATCH (p:Node) RETURN p.y")))
nodes.z=as.numeric(unlist(RNeo4j::getNodes(graph,"MATCH (p:Node) RETURN p.z")))
edge.source.x=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN p.x")))
edge.source.y=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN p.y")))
edge.source.z=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN p.z")))
edge.target.x=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN a.x")))
edge.target.y=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN a.y")))
edge.target.z=as.numeric(unlist(RNeo4j::getRels(graph,"MATCH (p:Node)-[:pre]->(a:Node) RETURN a.z")))
rgl::plot3d(x=nodes.x,y=nodes.y,z=nodes.z,xlab="x",ylab="y",zlab="z",size=10,col="red",box=FALSE)
rgl::planes3d(a=0,b=0,c=1,d=(-1)*nodes.z,alpha=0.05,add=TRUE)
count=1
while(count<=length(edge.source.x)){
rgl::lines3d(x=c(edge.source.x[c(count)],edge.target.x[c(count)]),
y=c(edge.source.y[c(count)],edge.target.y[c(count)]),
z=c(edge.source.z[c(count)],edge.target.z[c(count)]),
add=TRUE)
count=count+1
}
library(shiny); runApp('C:/Users/Rajat/Desktop/Code/Projects/Atlas-of-Learning/R/plotlyShiny.R')
runApp('C:/Users/Rajat/Desktop/Code/Projects/Atlas-of-Learning/R/plotlyShiny.R')
runApp('C:/Users/Rajat/Desktop/Code/Projects/Atlas-of-Learning/R/plotlyShiny.R')
runApp('C:/Users/Rajat/Desktop/Code/Projects/Atlas-of-Learning/R/plotlyShiny.R')
runApp('C:/Users/Rajat/Desktop/Code/Projects/Atlas-of-Learning/R/plotlyShiny.R')
